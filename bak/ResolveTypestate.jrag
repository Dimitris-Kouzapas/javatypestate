import java.util.*;

aspect ResolveTypestate {

	inh TypestateFunc LabelTBlock.getTarget(String label);			//implemented in TypestateDecl
	syn lazy TypestateFunc LabelTBlock.getTarget() = getTarget(getID());
	inh boolean TypestateBlock.isReachable(TypestateFunc tf);		//implemented in TypestateDecl
	syn lazy boolean TypestateBlock.isReachable() = isReachable(getTypestateFuncParent());
	inh boolean TypestateFunc.isReachable(TypestateFunc tf);		//implemented in TypestateDecl
	syn lazy boolean TypestateFunc.isReachable() = isReachable(this);
	inh boolean TypestateFunc.isDuplicate(TypestateFunc tf);		//implemented in TypestateDecl
	syn lazy boolean TypestateFunc.isDuplicate() = isDuplicate(this);
	inh String TypestateFunc.getMainLabel();				//implemented in TypestateDecl

	eq TypestateDecl.getTypestateFunc(int i).getTarget(String label) = getTypestateFunc(label);	//implements getTarget in LabelTBlock

	syn TypestateFunc TypestateDecl.getTypestateFunc(String label) {
		for(int i = 0; i < getNumTypestateFunc(); i++)
			if(getTypestateFunc(i).getID().equals(label))
				return getTypestateFunc(i);
		return null;
	}

	eq TypestateDecl.getTypestateFunc(int j).isDuplicate(TypestateFunc tf) {
		int count = 0;
		for(int i = 0; i < getNumTypestateFunc(); i++)
			if(getTypestateFunc(i).getID().equals(tf.getID()))
				count++;
		return count > 1;
	}

	eq TypestateDecl.getTypestateFunc(int i).getMainLabel() = getMainLabel();	//implements getMainLabel in getTypestateFunc 
	syn lazy String TypestateDecl.getMainLabel() = "main";
	syn lazy TypestateFunc TypestateDecl.getMain() = getTypestateFunc(getMainLabel());
	syn lazy boolean TypestateDecl.isMainDeclared() = getMain() != null;

	syn Set<TypestateFunc> TypestateFunc.reachable() circular [new HashSet<TypestateFunc>()];

	eq TypestateFunc.reachable() {
		Set result = new HashSet<TypestateFunc>();
		result.add(this);				//TODO I guess this works
		for(TypestateFunc s: successors()) {
			//result.add(s);
			result.addAll(s.reachable());
		}
		return result;
	}

	syn boolean TypestateDecl.isReachable(TypestateFunc tf) = isMainDeclared() ? getMain().reachable().contains(tf) : false;
	//implements isReachable in TypestateBlock
	eq TypestateDecl.getTypestateFunc(int i).isReachable(TypestateFunc tf) = isReachable(tf);
}


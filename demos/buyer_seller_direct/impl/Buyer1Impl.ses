package demos.buyer_seller_direct.impl;

public class Buyer1Impl typestate Buyer1 {
    public Buyer1() {
       seller.title("Brave New World");
    }

    public price(int amount) {
    }

    public void sendQuoteToBuyer2(int quote) {
        this.socketBuyer2Out.println(quote);
        //System.out.println("Buyer1 to Buyer2: Your quote to pay is " + quote + ". Do you agree?");
    }

    public AgreementLabel receiveLabelFromBuyer2() {
        String label = "";
        try {
            label = this.socketBuyer2In.readLine();
        } catch (IOException e) {
            System.out.println("Input/Outpur error, unable to get label from buyer2");
            System.exit(-1);
        }

        if (label.equals("AGREE")) {
            return new AgreementLabel(AgreementLabel.AGREE);
        }
        return new AgreementLabel(AgreementLabel.QUIT);
    }

    public void transferMoneyToSeller(int money) {
        this.socketSellerOut.println(money);
        //System.out.println("Buyer1 to Seller: I transfer " + money);
        System.out.println("Bye!");
    }

    public static String safeRead(BufferedReader br) {
        String line = "";

        try {
            line = br.readLine();
        } catch (IOException e) {
            System.out.println("Input/Outpur error, unable to read");
            System.exit(-1);
        }

        return line;
    }

    public static void main(String [] args) {
        Buyer1 buyer1 = new Buyer1();
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        // Ask the user for the name of the book
        System.out.print("Buyer1 to Seller: I would like to buy the book ");
        String title = safeRead(br);
        buyer1.sendTitleToSeller(title);
      
        // Receive the price from seller
        int price  = buyer1.receivePriceFromSeller();
        System.out.println("Seller to Buyer1: Price of the book is £" + price);
        
        // Ask the user for the quote
        System.out.print("Buyer1 to Buyer2: Your quote to pay is £");
        int quote = Integer.parseInt(safeRead(br));
        buyer1.sendQuoteToBuyer2(quote);

        //AgreementLabel label = buyer1.receiveLabelFromBuyer2();
        switch (buyer1.receiveLabelFromBuyer2().getEnum()) {
            case AgreementLabel.AGREE:
                System.out.println("Buyer2 agrees to contribute");
                System.out.print("Buyer1 to Seller: I am transfering you £");
                int mypart = Integer.parseInt(safeRead(br));
                buyer1.transferMoneyToSeller(mypart);
                break;
            case AgreementLabel.QUIT:
                System.out.println("Buyer2 does not want to contribute");
                break;
        }
    }
}

package demos.jedis;

// So here's the asynchronous expansion of the other typestate definition. This maps 
// more directly to a Scribble protocol.

// Notice how any data passed back in the response is supplied as an ARGUMENT, not a
// return value, and any choices made are done so via method selection, not the passing
// of a label as an argument.  

typestate Redis_Server_Async {
	session
		InitSession = {
           void WATCH(String[]): Watching
		}
	where
		Watching = {
			void GET_request(String): Waiting_Watching_GET,
			void WATCH(String[]): Watching,
			void MULTI(): Queued
		}
		
		Waiting_Watching_GET = {
			void GET_response(String): Watching 
		}

		Queued = {
		    void SET(String, String): Queued,
			void DISCARD(): end,
			void EXEC(): Waiting_Queued_EXEC
		}
		
		Waiting_Queued_EXEC = {
			void OK(): end, 
			void FAIL(): Queued
		}
}

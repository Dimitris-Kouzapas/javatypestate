package demos.loop;

/**
 * Arguably the loop typestate itself is inhabited (since we can create an object that
 * implements it), but its (informal) dual is uninhabited, in that we cannot define a 
 * client that consumes the loop.
 */
class ClientTest {
  	void test1 () {
  		LoopImpl loop = new LoopImpl();
  		Bool finished;
  		do {
  			finished = loop.finished();
  		} while(finished != new Bool(Bool.TRUE)); 
  	}
}

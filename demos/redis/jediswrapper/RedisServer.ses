package demos.redis.jediswrapper;

// A version of the server protocol where asychronous request/response pairs are coalesced
// into synchronous methods with return values.

typestate RedisServer {
	session
		Init = {
           void WATCH(String[]): Watching
		}
	where
		Watching = {
			String GET(String): Watching,
			void WATCH(String[]): Watching,
			void MULTI(): Queued
		}

		Queued = {
		    void SET(String, String): Queued,
			void DISCARD(): end,
			Result EXEC(): <OK:end, FAIL:Queued>
		}
}
